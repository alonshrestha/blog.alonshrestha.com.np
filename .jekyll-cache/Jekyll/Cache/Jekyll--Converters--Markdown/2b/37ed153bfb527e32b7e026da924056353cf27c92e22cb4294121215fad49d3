I"õ;<p><code class="language-plaintext highlighter-rouge">Links</code> are assigned to file on Linux which works as <code class="language-plaintext highlighter-rouge">aliases</code>. There are two types of links on Linux <code class="language-plaintext highlighter-rouge">symbolic links</code> and <code class="language-plaintext highlighter-rouge">hard links</code>. In this article, we will learn how to use and manage links on Linux.</p>

<blockquote>
  <p><strong>Table Of Content</strong></p>
</blockquote>

<ul id="markdown-toc">
  <li><a href="#hard-links" id="markdown-toc-hard-links">Hard Links</a></li>
  <li><a href="#symbolic-links" id="markdown-toc-symbolic-links">Symbolic Links</a></li>
  <li><a href="#creating-links" id="markdown-toc-creating-links">Creating Links</a></li>
  <li><a href="#removing-links" id="markdown-toc-removing-links">Removing Links</a></li>
</ul>

<blockquote>
  <p><strong>Requirements</strong></p>
</blockquote>

<ul>
  <li>Must have basic knowledge about the organization of the <code class="language-plaintext highlighter-rouge">Linux file system</code>.</li>
</ul>

<h1 id="hard-links">Hard Links</h1>
<p>On Linux, every file has an <code class="language-plaintext highlighter-rouge">inode</code>, and in the inode, administrative information is stored. Information like :</p>

<ul>
  <li>Data block where the file content is stored</li>
  <li>Creation, access and modification date</li>
  <li>PermissionÂ </li>
  <li>File owners</li>
</ul>

<p>are stored in the inode.  From the above information, one important information is not stored in the inode i.e the <code class="language-plaintext highlighter-rouge">name</code> of the file. Names are itself stored in the directory, and each filename knows which inode to address for further file information.</p>

<p>Simply understanding <code class="language-plaintext highlighter-rouge">hard links</code>, giving a name while creating a file, this name is called hard links. On Linux single file can have multiple hard links that enable you to access the file from multiple different locations.</p>

<p>Some of the restrictions applied to hard links are as follows:</p>
<ul>
  <li>Hard links cannot be created to directories</li>
  <li>If the last name of the multiple aliases of the original file is removed, then the content is also removed.</li>
  <li>All the hard links should be on the same device.</li>
</ul>

<p>When you create multiple hard links of a file, there is no difference between the first hard link and the last hard link you have created. If the first hard link that exists is removed, then it does not impact other hard links.</p>

<h1 id="symbolic-links">Symbolic Links</h1>
<p><code class="language-plaintext highlighter-rouge">Symbolic Links</code> are also known as <code class="language-plaintext highlighter-rouge">soft links</code>. This is more flexible than hard links. The advantages and disadvantage of symbolic links are:</p>

<p><strong>Advantages</strong></p>
<ul>
  <li>This link directly to the name of the file rather than inode.</li>
  <li>They can link to file as well as directories on other devices.</li>
</ul>

<p><strong>Disadvantage</strong></p>
<ul>
  <li>When the original file is removed, the symbolic link becomes invalid and doesâ€™t work any longer.</li>
</ul>

<h1 id="creating-links">Creating Links</h1>
<p>For creating links on Linux <code class="language-plaintext highlighter-rouge">ln</code> command is used. If you want to create a symbolic link, use the <code class="language-plaintext highlighter-rouge">-s</code> option and then specify your source and target file or directory.</p>

<p><strong>Example for Symbolic Link</strong></p>

<p>Creating a soft link in the current directory</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="p">[</span><span class="n">alon</span><span class="vi">@localhost</span> <span class="no">Documents</span><span class="p">]</span><span class="err">$</span> <span class="n">ln</span> <span class="o">-</span><span class="n">s</span> <span class="sr">/etc/</span>
<span class="p">[</span><span class="n">alon</span><span class="vi">@localhost</span> <span class="no">Documents</span><span class="p">]</span><span class="err">$</span> <span class="n">ls</span> <span class="o">-</span><span class="n">l</span>
<span class="n">total</span> <span class="mi">0</span>
<span class="n">lrwxrwxrwx</span><span class="o">.</span> <span class="mi">1</span> <span class="n">alon</span> <span class="n">alon</span> <span class="mi">5</span> <span class="no">Oct</span> <span class="mi">22</span> <span class="mo">00</span><span class="p">:</span><span class="mi">20</span> <span class="n">etc</span> <span class="o">-&gt;</span> <span class="sr">/etc/</span></code></pre></figure>

<p>Creating soft link in specified directory</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="p">[</span><span class="n">alon</span><span class="vi">@localhost</span> <span class="no">Documents</span><span class="p">]</span><span class="err">$</span> <span class="n">ln</span> <span class="o">-</span><span class="n">s</span> <span class="sr">/home/</span> <span class="o">/</span><span class="n">tmp</span><span class="o">/</span>
<span class="p">[</span><span class="n">alon</span><span class="vi">@localhost</span> <span class="n">tmp</span><span class="p">]</span><span class="err">$</span> <span class="n">ls</span> <span class="o">-</span><span class="n">l</span>
<span class="n">total</span> <span class="mi">0</span>
<span class="n">lrwxrwxrwx</span><span class="o">.</span> <span class="mi">1</span> <span class="n">alon</span> <span class="n">alon</span>  <span class="mi">6</span> <span class="no">Oct</span> <span class="mi">22</span> <span class="mo">00</span><span class="p">:</span><span class="mi">45</span> <span class="n">home</span> <span class="o">-&gt;</span> <span class="sr">/home/</span>

<span class="c1"># soft link to the /home is created on /tmp</span></code></pre></figure>

<p><strong>Example for Hard Link</strong></p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="p">[</span><span class="n">root</span><span class="vi">@localhost</span> <span class="no">Data</span><span class="p">]</span><span class="c1"># ln /etc/hosts .</span>
<span class="p">[</span><span class="n">root</span><span class="vi">@localhost</span> <span class="no">Data</span><span class="p">]</span><span class="c1"># ls -l</span>
<span class="n">total</span> <span class="mi">4</span>
<span class="o">-</span><span class="n">rw</span><span class="o">-</span><span class="n">r</span><span class="o">--</span><span class="n">r</span><span class="o">--.</span> <span class="mi">3</span> <span class="n">root</span> <span class="n">root</span> <span class="mi">158</span> <span class="no">Jun</span>  <span class="mi">7</span>  <span class="mi">2013</span> <span class="n">hosts</span></code></pre></figure>

<div class="alert alert-info">
    <i class="fa fa-info-circle"></i> <b>Note:</b>  For creating hard links you must be the owner of that file.
</div>

<style>
    .alert {
        padding: 8px 35px 8px 14px;
        margin-bottom: 18px;
        text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);
        background-color: #fcf8e3;
        border: 1px solid #fbeed5;
        -webkit-border-radius: 4px;
        -moz-border-radius: 4px;
        border-radius: 4px;
        color: #c09853;
    }
    .alert-heading {
        color: inherit;
    }
    .alert .close {
        position: relative;
        top: -2px;
        right: -21px;
        line-height: 18px;
    }
    .alert-success {
        background-color: #dff0d8;
        border-color: #d6e9c6;
        color: #468847;
    }
    .alert-danger,
    .alert-error {
        background-color: #f2dede;
        border-color: #eed3d7;
        color: #b94a48;
    }
    .alert-info {
        background-color: #d9edf7;
        border-color: #bce8f1;
        color: #3a87ad;
    }
    .alert-block {
        padding-top: 14px;
        padding-bottom: 14px;
    }
    .alert-block > p,
    .alert-block > ul {
        margin-bottom: 0;
    }
    .alert-block p + p {
        margin-top: 5px;
    }

</style>

<!--<div markdown="span" class="note" role="alert"><i class="fa fa-info-circle"></i> <b>Note:</b>  For creating hard links you must be the owner of that file.</div>-->

<h1 id="removing-links">Removing Links</h1>
<p>Removing links on Linux is a bit risky task to do. You might create an error working program or loses the data. Below shows the example of removing links.</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1">#create directory in your home directory</span>

<span class="p">[</span><span class="n">alon</span><span class="vi">@localhost</span> <span class="o">~</span><span class="p">]</span><span class="err">$</span> <span class="n">mkdir</span> <span class="nb">test</span>

<span class="c1">#copy /etc/hosts in test directory</span>

<span class="p">[</span><span class="n">alon</span><span class="vi">@localhost</span> <span class="o">~</span><span class="p">]</span><span class="err">$</span> <span class="n">cp</span> <span class="sr">/etc/</span><span class="n">hosts</span> <span class="sr">/home/</span><span class="n">alon</span><span class="o">/</span><span class="nb">test</span><span class="o">/</span>

<span class="c1">#create soft link of test as link</span>

<span class="p">[</span><span class="n">alon</span><span class="vi">@localhost</span> <span class="o">~</span><span class="p">]</span><span class="err">$</span> <span class="n">ln</span> <span class="o">-</span><span class="n">s</span> <span class="nb">test</span> <span class="n">link</span>

<span class="c1">#remove link</span>

<span class="p">[</span><span class="n">alon</span><span class="vi">@localhost</span> <span class="o">~</span><span class="p">]</span><span class="err">$</span> <span class="n">rm</span> <span class="n">link</span></code></pre></figure>

<!--<div markdown="span" class="alert alert-danger" role="alert"><i class="fa fa-exclamation-circle"></i> <b>Warning:</b>  Do not use -r or -f to remove link. You will lose the data from the original file.</div>-->

<div class="alert alert-error">
    <i class="fa fa-exclamation-circle"></i> <b>Warning:</b>  Do not use -r or -f to remove link. You will lose the data from the original file.
</div>

<style>

    .alert {
        padding: 8px 35px 8px 14px;
        margin-bottom: 18px;
        text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);
        background-color: #fcf8e3;
        border: 1px solid #fbeed5;
        -webkit-border-radius: 4px;
        -moz-border-radius: 4px;
        border-radius: 4px;
        color: #c09853;
    }
    .alert-heading {
        color: inherit;
    }
    .alert .close {
        position: relative;
        top: -2px;
        right: -21px;
        line-height: 18px;
    }
    .alert-success {
        background-color: #dff0d8;
        border-color: #d6e9c6;
        color: #468847;
    }
    .alert-danger,
    .alert-error {
        background-color: #f2dede;
        border-color: #eed3d7;
        color: #b94a48;
    }
    .alert-info {
        background-color: #d9edf7;
        border-color: #bce8f1;
        color: #3a87ad;
    }
    .alert-block {
        padding-top: 14px;
        padding-bottom: 14px;
    }
    .alert-block > p,
    .alert-block > ul {
        margin-bottom: 0;
    }
    .alert-block p + p {
        margin-top: 5px;
    }
</style>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="c1">#creating link again</span>

<span class="p">[</span><span class="n">alon</span><span class="vi">@localhost</span> <span class="o">~</span><span class="p">]</span><span class="err">$</span> <span class="n">ln</span> <span class="o">-</span><span class="n">s</span> <span class="nb">test</span> <span class="n">link</span>

<span class="c1">#using -rf</span>

<span class="p">[</span><span class="n">alon</span><span class="vi">@localhost</span> <span class="o">~</span><span class="p">]</span><span class="err">$</span> <span class="n">rm</span> <span class="o">-</span><span class="n">rf</span> <span class="n">link</span><span class="o">/</span>
<span class="p">[</span><span class="n">alon</span><span class="vi">@localhost</span> <span class="o">~</span><span class="p">]</span><span class="err">$</span> <span class="n">ls</span> <span class="o">-</span><span class="n">l</span>
<span class="n">total</span> <span class="mi">0</span>
<span class="n">lrwxrwxrwx</span><span class="o">.</span> <span class="mi">1</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">4</span> <span class="no">Oct</span> <span class="mi">22</span> <span class="mo">01</span><span class="p">:</span><span class="mi">08</span> <span class="n">link</span> <span class="o">-&gt;</span> <span class="nb">test</span>
<span class="n">drwxr</span><span class="o">-</span><span class="n">xr</span><span class="o">-</span><span class="n">x</span><span class="o">.</span> <span class="mi">2</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">6</span> <span class="no">Oct</span> <span class="mi">22</span> <span class="mo">01</span><span class="p">:</span><span class="mi">08</span> <span class="nb">test</span>

<span class="c1">#you will still see the link exist, but your original directory test will be empty.</span>

<span class="p">[</span><span class="n">alon</span><span class="vi">@localhost</span> <span class="o">~</span><span class="p">]</span><span class="err">$</span> <span class="n">ls</span> <span class="nb">test</span><span class="o">/</span></code></pre></figure>

<div class="bs-callout bs-callout-danger">
    <h4>Summary</h4>
    In this articel, you learned how to manage and work with links on Linux. Please feel free to write me if need any help.
</div>

<style>
    .bs-callout {
        padding: 20px;
        margin: 20px 0;
        border: 1px solid #eee;
        border-left-width: 5px;
        border-radius: 3px;
    }
    .bs-callout h4 {
        margin-top: 0;
        margin-bottom: 5px;
    }
    .bs-callout p:last-child {
        margin-bottom: 0;
    }
    .bs-callout code {
        border-radius: 3px;
    }
    .bs-callout+.bs-callout {
        margin-top: -5px;
    }
    .bs-callout-default {
        border-left-color: #777;
    }
    .bs-callout-default h4 {
        color: #777;
    }
    .bs-callout-primary {
        border-left-color: #428bca;
    }
    .bs-callout-primary h4 {
        color: #428bca;
    }
    .bs-callout-success {
        border-left-color: #5cb85c;
    }
    .bs-callout-success h4 {
        color: #5cb85c;
    }
    .bs-callout-danger {
        border-left-color: #d9534f;
    }
    .bs-callout-danger h4 {
        color: #d9534f;
    }
    .bs-callout-warning {
        border-left-color: #f0ad4e;
    }
    .bs-callout-warning h4 {
        color: #f0ad4e;
    }
    .bs-callout-info {
        border-left-color: #5bc0de;
    }
    .bs-callout-info h4 {
        color: #5bc0de;
    }
</style>

<blockquote>
  <p><strong>Reference</strong></p>
  <blockquote>
    <p>Red HatÂ® RHCSAâ„¢/RHCEÂ® 7 Cert Guide: Red Hat Enterprise Linux 7 (EX200 and EX300) Sander van Vugt.</p>
  </blockquote>
</blockquote>
:ET